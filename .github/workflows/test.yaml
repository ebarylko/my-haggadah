name: Run tests

on: [push, pull_request]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    container:
      #image: robcherry/docker-chromedriver:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: get latest chromedriver version
        run: |
          CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`



      # - name: Cache chromedriver
      #   id: cache-chromedriver
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-chromedriver
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${CHROMEDRIVER_VERSION}

      # - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      #   name: List the state of node modules
      #   continue-on-error: true
      #   run: npm list

      - name: install chromedriver
        run: |
          CHROMEDRIVER_VERSION=`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`
          mkdir -p /opt/chromedriver-$CHROMEDRIVER_VERSION 
          curl -sS -o /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver-$CHROMEDRIVER_VERSION 
          rm /tmp/chromedriver_linux64.zip 
          chmod +x /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver 
          ln -fs /opt/chromedriver-$CHROMEDRIVER_VERSION/chromedriver /usr/local/bin/chromedriver
          curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - 
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list 
          apt-get -yqq update 
          apt-get -yqq install google-chrome-stable 
          rm -rf /var/lib/apt/lists/*

      - uses: actions/setup-node@v3 #Setup Node
        with:
          node-version: '18'

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      # #- run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev libasound2


      - uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: 1.10.1.693              # Clojure CLI based on tools.deps
          lein: 2.9.1                  # Leiningen

      - name: run test

        env:
          CHROME_BIN: "/usr/bin/google-chrome"
          GCLOUD_PROJECT: "my-haggadah"
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MY_HAGGADAH}}
        run: |
            npm install
            npm install -g firebase-tools
            npm run test
            npm run release
            cd functions
            npm install
            npm run release
            npm run test
            cd ..
            pwd
            npm run test:acceptance 


